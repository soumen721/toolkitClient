
/*
 * 
 */

package com.ee.cne.ws.getctxwithoperations.generated;

import java.net.MalformedURLException;
import java.net.URL;

import javax.jws.HandlerChain;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.2.2
 * Tue Oct 09 15:00:26 IST 2018
 * Generated source version: 2.2.2
 * 
 */


@WebServiceClient(name = "getContextWithOperationsService", 
                  wsdlLocation = "file:/C:/Project_Details/custom_login_module/CNE-custom-login-module/src/main/resources/wsdl/crm/customer/service/GetContextWithOperations/1.0/GetContextWithOperations.wsdl",
                  targetNamespace = "http://www.everythingeverywhere.com/crm/customer/service/GetContextWithOperations/v1.0") 
@HandlerChain(file="handler-chain.xml")
public class GetContextWithOperationsService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.everythingeverywhere.com/crm/customer/service/GetContextWithOperations/v1.0", "getContextWithOperationsService");
    public final static QName GetContextWithOperations10 = new QName("http://www.everythingeverywhere.com/crm/customer/service/GetContextWithOperations/v1.0", "GetContextWithOperations_1.0");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Project_Details/custom_login_module/CNE-custom-login-module/src/main/resources/wsdl/crm/customer/service/GetContextWithOperations/1.0/GetContextWithOperations.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/Project_Details/custom_login_module/CNE-custom-login-module/src/main/resources/wsdl/crm/customer/service/GetContextWithOperations/1.0/GetContextWithOperations.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public GetContextWithOperationsService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public GetContextWithOperationsService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GetContextWithOperationsService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns GetContextWithOperations
     */
    @WebEndpoint(name = "GetContextWithOperations_1.0")
    public GetContextWithOperations getGetContextWithOperations10() {
        return super.getPort(GetContextWithOperations10, GetContextWithOperations.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GetContextWithOperations
     */
    @WebEndpoint(name = "GetContextWithOperations_1.0")
    public GetContextWithOperations getGetContextWithOperations10(WebServiceFeature... features) {
        return super.getPort(GetContextWithOperations10, GetContextWithOperations.class, features);
    }

}
